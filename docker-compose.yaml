version: "3.7"

networks:
    internal:
    web:

services:

    proxy:
        image: traefik:2.4
        command:
            # - "--log.level=DEBUG"
            - "--api=true"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.docker"
            - "--entrypoints.web.address=:80"
            # - "--entryPoints.websecure.address=:443"
            # - "--certificatesResolvers.yas.acme.httpchallenge=true"
            # - "--certificatesresolvers.yas.acme.httpchallenge.entrypoint=web"
            # - "--certificatesresolvers.yas.acme.email=sample@localhost.ir"
            # - "--certificatesresolvers.yas.acme.storage=/letsencrypt/acme.json"
        volumes:
            - type: bind
              source: /var/run/docker.sock
              target: /var/run/docker.sock
              read_only: true
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
            - target: 8080
              published: 8080
              protocol: tcp
              mode: host
            - target: 443
              published: 443
              protocol: tcp
              mode: host
        networks:
            - internal
            - web
    
    app:
        image: node:14-slim
        # build: 
        #     context: .
        #     target: development
        restart: always
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.app.rule=Host(`fiberman.ir`)"
            - "traefik.http.routers.app.entrypoints=web"
            # - "traefik.http.routers.app.entrypoints=websecure"
            # - "traefik.http.routers.app.tls.certresolver=app"
            - "traefik.http.services.app.loadbalancer.server.port=3000"
        working_dir: /app
        environment:
            PORT: 3000
            NODE_ENV: development
            DB_CONNECTION_URL: mongodb://user:test@db:27017/app?authSource=admin
        ports:
            - "9229:9229"
        volumes:
            - ./:/app
        networks:
            - internal
        command: ["npm", "run", "dev"]
        
    db:
        image: mongo:4.0.20-xenial
        environment:
            MONGO_INITDB_ROOT_USERNAME: user
            MONGO_INITDB_ROOT_PASSWORD: test
        volumes:
            - mongodb-data:/data/db
        networks:
            - internal
        ports:
            - "27017:27017"

volumes:
    mongodb-data:
